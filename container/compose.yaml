services:
  database:
    annotations:
    - topology=infrastructure
    - type=persistence
    image: postgres:latest
    restart: always
    container_name: postgres
    environment:
    - POSTGRES_USER=admin
    - POSTGRES_PASSWORD=adminpwd
    - POSTGRES_DB=spring
    ports:
    - "5432" # serve database
    networks:
    - development

  jaeger:
    annotations:
    - topology=infrastructure
    - type=monitoring
    image: jaegertracing/all-in-one:latest
    restart: always
    container_name: jaeger
    environment:
    - COLLECTOR_OTLP_ENABLED=true
    ports:
    - "6831" # accept jaeger.thrift over Thrift-compact protocol (used by most SDKs)
    - "6832" # accept jaeger.thrift over Thrift-binary protocol (used by Node.js SDK)
    - "5778" # serve configs (sampling, etc.)
    - "16686:16686" # serve frontend
    - "4317" # accept OpenTelemetry Protocol (OTLP) over gRPC
    - "4318" # accept OpenTelemetry Protocol (OTLP) over HTTP
    - "14268" # accept jaeger.thrift directly from clients
    - "14250" # accept model.proto
    - "9411" # Zipkin compatible endpoint (optional)
    networks:
    - development

  prometheus:
    annotations:
    - topology=infrastructure
    - type=monitoring
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml
    ports:
    - "9090:9090" # serve frontend
    networks:
    - development

  grafana:
    annotations:
    - topology=infrastructure
    - type=monitoring
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
    - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
    - "3000:3000" # serve frontend
    networks:
    - development
    depends_on:
    - prometheus

  otelcol:
    annotations:
    - topology=infrastructure
    - type=monitoring
    image: otel/opentelemetry-collector:latest
    container_name: otel-col
    restart: always
    command:
    - --config=/etc/otelcol-config.yml
    volumes:
    - ./otel/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
    - "1888" # pprof extension
    - "8888" # Prometheus metrics exposed by the Collector
    - "8889" # Prometheus exporter metrics
    - "13133" # health_check extension
    - "4317:4317" # OTLP gRPC receiver
    - "4318:4318" # OTLP http receiver
    - "55679" # zpages extension
    depends_on:
    - jaeger
    - loki
    networks:
    - development

networks:
  development:
    driver: bridge