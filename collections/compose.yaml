services:
  springdb:
    image: postgres:latest
    restart: "no"
    environment:
    - POSTGRES_USER=admin
    - POSTGRES_PASSWORD=
    - POSTGRES_DB=spring
    - POSTGRES_HOST_AUTH_METHOD=trust
    - TZ=Europe/Rome
    ports:
    - "5432:5432" # serve database
    networks:
    - vscode-spring-dev

  jaeger:
    image: jaegertracing/jaeger:latest
    restart: "no"
    environment:
    - LOG_LEVEL=debug
    - TZ=Europe/Rome
    ports:
    - "6831" # accept jaeger.thrift over Thrift-compact protocol (used by most SDKs)
    - "6832" # accept jaeger.thrift over Thrift-binary protocol (used by Node.js SDK)
    - "5778" # serve configs (sampling, etc.) over HTTP
    - "5779" # serve configs (sampling, etc.) over gRPC
    - "16686:16686" # serve frontend
    - "4317" # accept OpenTelemetry Protocol (OTLP) over gRPC
    - "4318" # accept OpenTelemetry Protocol (OTLP) over HTTP
    - "9411" # Zipkin compatible endpoint (optional)
    networks:
    - vscode-spring-dev

  loki:
    image: grafana/loki:main
    restart: "no"
    environment:
    - TZ=Europe/Rome
    command: 
    - -config.file=/etc/loki/local-config.yaml
    volumes:
    - ./loki/local-config.yaml:/etc/loki/local-config.yaml
    ports:
    - "3100" # serve http server
    - "9096" # serve grpc server
    networks:
    - vscode-spring-dev

  prometheus:
    image: prom/prometheus:main
    restart: "no"
    environment:
    - TZ=Europe/Rome
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus/prometheus-config.yml:/etc/prometheus/prometheus.yml
    ports:
    - "9090:9090" # serve frontend
    networks:
    - vscode-spring-dev
    depends_on:
    - otelcol

  grafana:
    image: grafana/grafana:main
    restart: "no"
    environment:
    - TZ=Europe/Rome
    volumes:
    - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
    - "3000:3000" # serve frontend
    networks:
    - vscode-spring-dev
    depends_on:
    - prometheus
    - loki
    - jaeger

  otelcol:
    image: otel/opentelemetry-collector-contrib:latest
    restart: "no"
    environment:
    - TZ=Europe/Rome
    command:
    - --config=/etc/otelcol-config.yml
    volumes:
    - ./otel/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
    - "1888" # pprof extension
    - "8888" # Prometheus metrics exposed by the Collector
    - "8889" # Prometheus exporter metrics
    - "13133" # health_check extension
    - "4317:4317" # OTLP gRPC receiver
    - "4318:4318" # OTLP http receiver
    - "55679" # zpages extension
    depends_on:
    - jaeger
    networks:
    - vscode-spring-dev

  kafka:
    image: bitnami/kafka:latest
    restart: "no"
    environment:
    - TZ=Europe/Rome
    - KAFKA_CFG_NODE_ID=0
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    - KAFKA_CFG_PROCESS_ROLES=controller,broker
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
    - "9092:9092" # serve broker
    networks:
    - vscode-spring-dev

  # https://github.com/keycloak/keycloak/issues/11664
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: "no"
    environment:
    - TZ=Europe/Rome
    - KC_BOOTSTRAP_ADMIN_USERNAME=kcuser
    - KC_BOOTSTRAP_ADMIN_PASSWORD=kcpwd
    - JAVA_OPTS_KC_HEAP=-XX:MaxRAMPercentage=70 -XX:MinRAMPercentage=70 -XX:InitialRAMPercentage=50
    command:
    - start-dev
    - --import-realm
    volumes:
    - ./keycloak/db:/opt/keycloak/data
    - ./keycloak/conf:/opt/keycloak/import
    ports:
    - "8080:8080" # serve web server
    networks:
    - vscode-spring-dev

  wiremock:
    image: wiremock/wiremock:latest
    restart: "no"
    environment:
    - TZ=Europe/Rome
    entrypoint:
    - "/docker-entrypoint.sh"
    - "--global-response-templating"
    - "--disable-gzip"
    - "--verbose"
    volumes:
    - ./wiremock/extensions:/var/wiremock/extensions
    - ./wiremock/__files:/home/wiremock/__files
    - ./wiremock/mappings:/home/wiremock/mappings
    - ./wiremock/certs:/home/wiremock/certs
    ports:
    - "9998:8080" # serve web server http
    - "9999:8443" # serve web server https
    networks:
    - vscode-spring-dev

networks:
  vscode-spring-dev:
    driver: bridge