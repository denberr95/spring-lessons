package com.personal.springlessons.service;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.assertTrue;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.UUID;
import com.personal.springlessons.config.AppPropertiesConfig;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class FileSystemServiceTest {

    @Autowired
    private FileSystemService fileSystemService;

    @Autowired
    private AppPropertiesConfig appPropertiesConfig;

    @Test
    @DisplayName("Test default file system generated by constructor")
    void whenCreateConstructor_thenDefaultFileSystemWasCreated() {
        assertTrue(Files.exists(Paths.get(this.appPropertiesConfig.getDefaultPath())));
    }

    @Test
    @DisplayName("Test free disk space on file system")
    void whenGetFreeDiskSpace_thenFileSystemHasToBePositive() {
        assertThat(this.fileSystemService.getFreeDiskSpace()).isPositive();
    }

    @Test
    @DisplayName("Test total disk space on file system")
    void whenGetTotalDiskSpace_thenFileSystemHasToBePositive() {
        assertThat(this.fileSystemService.getTotalSpace()).isPositive();
    }

    @Test
    @DisplayName("Test store file and load from file system")
    void whenStoreAndLoadFile_thenFileWasSuccesfulRetrieved() {
        final String expected = "Hello World";
        final String fileName = UUID.randomUUID().toString();
        this.fileSystemService.store(fileName, expected.getBytes());
        final byte[] actual = this.fileSystemService.load(fileName);
        assertThat(actual).containsExactly(expected.getBytes());
        assertThat(new String(actual)).isEqualTo(expected);
    }
}
